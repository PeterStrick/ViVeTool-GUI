<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="icons8_change_theme_24px" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\..\vivetool-gui\images\icons8_change_theme_24px.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="icons8_moon_and_stars_24" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\..\vivetool-gui\images\icons8_moon_and_stars_24.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="icons8_portrait_mode_scanning_96px" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\..\vivetool-gui\images\icons8_portrait_mode_scanning_96px.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="icons8_sun_24" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\..\vivetool-gui\images\icons8_sun_24.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Browse_PathToDebuggingTools" xml:space="preserve">
    <value>Path to symchk.exe from the Windows Debugging Tools</value>
  </data>
  <data name="Browse_SymbolPath_Description" xml:space="preserve">
    <value>Select a Folder to store the downloaded Debug Symbols into. The downloaded .pdb Files usually take up to 5~8GB of Space.</value>
  </data>
  <data name="ToolTip_RTB_DbgPath" xml:space="preserve">
    <value>Example Path: C:\Program Files\Windows Kits\10\Debuggers\x64\symchk.exe</value>
  </data>
  <data name="ToolTip_RTB_SymbolPath" xml:space="preserve">
    <value>The Downloaded Debug Symbols can be up to 5~30GB in size.</value>
  </data>
  <data name="Error_AnErrorOccurred" xml:space="preserve">
    <value>An Error occurred</value>
  </data>
  <data name="Error_AnExceptionOccurred" xml:space="preserve">
    <value>An Exception occurred</value>
  </data>
  <data name="Error_SymbolPathException1_N" xml:space="preserve">
    <value>An Exception occurred while trying to write a test file to {0}</value>
    <comment>{0} references to a full Folder Path. Ex: C:\New folder</comment>
  </data>
  <data name="Error_CollapseException" xml:space="preserve">
    <value>Collapse Exception</value>
  </data>
  <data name="Error_ShowException" xml:space="preserve">
    <value>Show Exception</value>
  </data>
  <data name="SymbolDownloaded" xml:space="preserve">
    <value>Symbol {0} downloaded.</value>
    <comment>{0} references to a File Name or a File in a Directory, ex: Symbol1.pdb or Dir1/Symbol1.pdb</comment>
  </data>
  <data name="Calculation_TotalFilesIn_N" xml:space="preserve">
    <value>Total Files in {0}: {1}</value>
    <comment>{0} references to a full Folder Path, {1} references to a Number or Calculation_Calculating</comment>
  </data>
  <data name="Calculation_CurrentSizeOf_N" xml:space="preserve">
    <value>Current Size of {0}: {1}</value>
    <comment>{0} references to a full Folder Path, {1} references to a Total File Size or Calculation_Calculating</comment>
  </data>
  <data name="Calculation_Calculating" xml:space="preserve">
    <value>Calculatingâ€¦</value>
  </data>
  <data name="Calculation_TotalFoldersIn_N" xml:space="preserve">
    <value>Total Folders in {0}: {1}</value>
    <comment>{0} references to a full Folder Path, {1} references to a Number or Calculation_Calculating</comment>
  </data>
  <data name="Error_IOError" xml:space="preserve">
    <value>IO Error</value>
  </data>
  <data name="Done_OutputFile_N" xml:space="preserve">
    <value>Output File: {0}</value>
    <comment>{0} references to a TXT File and a full Folder Path, ex: C:\New folder\File1.txt</comment>
  </data>
  <data name="Done_SymbolDelete" xml:space="preserve">
    <value>Delete {0}</value>
    <comment>{0} references to a full Folder Path, ex: C:\New Folder</comment>
  </data>
  <data name="Done_Alert_CaptionText" xml:space="preserve">
    <value>Debug Symbol Scan complete</value>
  </data>
  <data name="Done_Alert_ContentText" xml:space="preserve">
    <value>The Debug Symbol Scan is complete. Return to the ViVeTool GUI Feature Scanner to find out more.</value>
  </data>
  <data name="Done_FileCopySuccessful_Caption" xml:space="preserve">
    <value> File Copy successful</value>
    <comment>The space at the beginning is used to make the text look better</comment>
  </data>
  <data name="Done_FileCopySuccessful_Heading" xml:space="preserve">
    <value>{0} was successfully copied to your desktop.</value>
    <comment>{0} references to a TXT File, ex: File1.txt</comment>
  </data>
  <data name="Error_CopyException" xml:space="preserve">
    <value>An Exception occurred while trying to copy {0} to your desktop.</value>
    <comment>{0} references to a TXT File, ex: File1.txt</comment>
  </data>
  <data name="Done_SymbolFolderDeleted_Caption" xml:space="preserve">
    <value> Symbol Folder deleted successfully</value>
    <comment>The space at the beginning is used to make the text look better</comment>
  </data>
  <data name="Done_SymbolFolderDeleted_Heading_N" xml:space="preserve">
    <value>{0} was successfully deleted.</value>
    <comment>{0} references to a full Folder Path, ex: C:\New Folder</comment>
  </data>
  <data name="Error_SymbolFolderDeleted_N" xml:space="preserve">
    <value>An Exception occurred while trying to delete {0}</value>
    <comment>{0} references to a full Folder Path. Ex: C:\New folder</comment>
  </data>
  <data name="Generic_DarkTheme" xml:space="preserve">
    <value>Dark Theme</value>
  </data>
  <data name="Generic_LightTheme" xml:space="preserve">
    <value>Light Theme</value>
  </data>
  <data name="Error_MissingFiles_Heading" xml:space="preserve">
    <value>An Error occurred. Files required for ViVeTool GUI Feature Scanner to work properly are missing.</value>
  </data>
  <data name="WB_HTML_Introduction" xml:space="preserve">
    <value>&lt;html&gt;&lt;body&gt;&lt;span style="font-size: 11pt; font-family: Segoe UI"&gt;&lt;p&gt;
Welcome to the ViVeTool GUI Feature Scanner
&lt;/p&gt;&lt;p&gt;
This Tool is used to download and scan .pdb (Program Debug Database) Files on newer Windows 10/11 Insider Builds to create your own Feature List.
&lt;/p&gt;&lt;p&gt;
The ViVeTool GUI Feature Scanner &lt;strong&gt;is not supposed to be used by the average user&lt;/strong&gt;. Downloading PDB Files from the Microsoft Symbol Server usually takes an average of 2 Hours depending on your Internet Speed.
&lt;/p&gt;&lt;p&gt;
This Tool requires:
&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;
5~30GB of Disk Space to store the downloaded Debug Symbols into
&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;
A installed copy of the Debugging Tools for Windows available from the Windows SDK
&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
After making sure that the requirements are met, set the Text Boxes below to their respective values and press on "Continue". Hover over them to for an example.
&lt;/p&gt;&lt;p&gt;
After that, the application will automatically start to download PDB Files.
&lt;/p&gt;&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;</value>
    <comment>Please be sure to leave the HTML intact. A HTML Editor/manually writing a html file and making sure it renders in IE is recommended.</comment>
  </data>
  <data name="Generic_Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Error_CopyExceptionAndClose_ToolTip" xml:space="preserve">
    <value>Copies the Exception to the Clipboard and closes the dialog</value>
  </data>
  <data name="Generic_FileSize_Gigabyte" xml:space="preserve">
    <value>GB</value>
  </data>
  <data name="Error_UnsupportedBuild" xml:space="preserve">
    <value>Unsupported Build</value>
  </data>
  <data name="Error_UnsupportedBuild_Text_N" xml:space="preserve">
    <value>You are running an unsupported Windows 10 Build. ViVe, ViVeTool and ViVeTool GUI require Windows 10 Build 18963 or higher to function properly. Your Build is: {0}</value>
    <comment>{0} references to a Build Number, ex: 19041</comment>
  </data>
  <data name="Error_mach2Scan_N" xml:space="preserve">
    <value>An Error occurred while scanning the symbol files.

The application will attempt to rescan the symbol folder.</value>
  </data>
  <data name="Error_SymbolDownload_N" xml:space="preserve">
    <value>An Error occurred while downloading the symbol files.

Check if you have access to symchk.exe and that your Anti-virus isn't blocking it.</value>
  </data>
  <data name="Error_SymbolFolderTestFile_N" xml:space="preserve">
    <value>An Error occurred while trying to write a test file to the symbol folder.

A symbol folder must be specified to download Program Debug Database files into.</value>
  </data>
  <data name="Error_SymchkPath_N" xml:space="preserve">
    <value>An Error occurred while checking if the specified Path to symchk.exe is valid.

Please be sure to enter a valid path to symchk.exe.

If you can not find symchk.exe, it is usually located at the Installation Directory of the Windows SDK\10\Debuggers\x64</value>
  </data>
  <data name="Error_SymbolPath_NewN" xml:space="preserve">
    <value>An Error occurred while trying to write a test file to {0}

Please make sure that the application has write access to the folder, and that the folder isn't write protected.</value>
  </data>
  <data name="Error_MissingFiles_Text_N" xml:space="preserve">
    <value>Please check that the following files are present:

{0}</value>
  </data>
  <data name="Language_Heading" xml:space="preserve">
    <value>Language Change requires restart</value>
  </data>
  <data name="Language_Text" xml:space="preserve">
    <value>ViVeTool GUI needs to restart to reflect the Language change. It will try to restart after you press on Close.</value>
  </data>
</root>